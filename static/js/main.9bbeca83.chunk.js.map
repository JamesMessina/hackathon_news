{"version":3,"sources":["StoryCard.js","ListStories.js","App.js","reportWebVitals.js","index.js"],"names":["StoryCard","props","title","url","author","points","comments","date","useState","count","setCount","style","listStyle","lineHeight","borderBottom","color","textDecoration","fontStyle","fontSize","href","onClick","ListStories","stories","map","story","index","num_comments","created_at","StoryList","handleChange","e","console","log","target","setState","name","value","handleOptionChange","selectedOption","handleButtonClick","preventDefault","state","isClicked","filterSearchByDate","term","item","toLowerCase","includes","filterSearchByAuthor","clearStories","searchTerm","isLoading","axios","get","then","res","data","hits","className","onSubmit","display","flexDirection","placeholder","type","this","onChange","checked","filter","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bbeca83.chunk.js","sourcesContent":["import React, { useState } from 'react'; \r\n\r\n\r\nfunction StoryCard(props){\r\n    const { title, url, author, points, comments, date } = props; \r\n    const [count, setCount] = useState(0); \r\n\r\n    return(\r\n        <li style={{listStyle: \"none\", lineHeight: \"2.0\", borderBottom: \"2px solid\"}}>\r\n            <a style={{color:\"lightgreen\", textDecoration:\"none\", fontStyle: \"italic\", fontSize: \"35px\"}} href={url}>{title}</a>\r\n            <h4> author: {author} ||<span> points: {points} ||</span> <span> No. of Comments: {comments} || <span> Date: {date}</span></span></h4>\r\n            <button onClick={() => setCount(count + 1)}>ðŸ’—Likes: {count}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default StoryCard;  ","import React from 'react'; \r\n\r\nimport StoryCard from './StoryCard'\r\n\r\nfunction ListStories(props){\r\n    return(\r\n        <ol>\r\n            {props.stories.map((story, index) =>{\r\n                return(\r\n                    <StoryCard\r\n                    key={index}\r\n                    index={index}\r\n                    url={story.url}\r\n                    title={story.title}\r\n                    author={story.author}\r\n                    points={story.points}\r\n                    comments={story.num_comments}\r\n                    date={story.created_at}/>\r\n                )\r\n            })}\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default ListStories; ","import React, { Component } from 'react'; \nimport axios from 'axios'; \n\nimport './App.css';\n\nimport ListStories from './ListStories'\n\nclass StoryList extends Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      isLoading: true, \n      stories: [],\n      searchTerm: \"\",\n      isClicked: false,\n      selectedOption: \"\"\n    }\n  }\n\n  componentDidMount(){\n    axios.get('http://hn.algolia.com/api/v1/search')\n    .then(res => {\n      const stories = res.data.hits\n      console.log(stories)\n      this.setState({isLoading: false, stories : stories})\n    })\n  }\n\n  handleChange = (e) =>{\n    console.log(\"input being typed\", e.target)\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n\n  handleOptionChange = (e) =>{\n    this.setState({selectedOption: e.target.value})\n  }\n\n  handleButtonClick = (e) =>{\n    e.preventDefault(); \n    if(this.state.isClicked === false){\n      this.setState({isClicked: true})\n    }else{\n      this.setState({isClicked: false})\n    }\n  }\n\n  filterSearchByDate = (term) =>{\n    return(item) => {\n      return (\n        item.created_at.toLowerCase().includes(term.toLowerCase())\n      )\n    }\n  }\n\n  filterSearchByAuthor = (term) =>{\n    return(item) => {\n      return (\n        item.author.toLowerCase().includes(term.toLowerCase())\n      )\n    }\n  }\n\n  clearStories = () => {\n    this.setState({searchTerm: \"\"}); \n    this.setState({isClicked: false});\n    this.setState({selectedOption: \"\"})\n  }\n\n  \n  render(){\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <form onSubmit={(e) => {this.handleButtonClick(e)}} style = {{fontSize: \"20px\", display: \"flex\", flexDirection: \"column\"}}>\n          <input name=\"searchTerm\" placeholder=\"search by author or date\" type=\"text\" value={this.state.searchTerm} onChange={(e) =>{this.handleChange(e)}}/>\n          <div>\n            <label>\n              <input checked={this.state.selectedOption === \"author\"} value=\"author\" type=\"radio\" onChange={(e) => {this.handleOptionChange(e)}}/>\n              Author\n            </label>\n          </div>  \n          <div>\n            <label>\n              <input checked={this.state.selectedOption === \"date\"} value=\"date\" type=\"radio\" onChange ={(e) => {this.handleOptionChange(e)}} />\n              Date\n            </label>\n          </div>\n          <button>List Stories</button>\n        </form>\n        <button onClick={(e) => {this.clearStories(e)}}>Clear</button>\n        {\n          (this.state.searchTerm && this.state.selectedOption === 'date' && this.state.isClicked) ?\n            <ListStories stories={this.state.stories.filter(this.filterSearchByDate(this.state.searchTerm))}/> :\n          (this.state.searchTerm && this.state.selectedOption === 'author' && this.state.isClicked) ?\n            <ListStories stories={this.state.stories.filter(this.filterSearchByAuthor(this.state.searchTerm))}/> :\n          (this.state.isClicked) ?\n            <ListStories stories={this.state.stories}/> :\n          <div></div>\n        }\n      </header>\n      </div>\n    );\n  }\n} \n\nexport default StoryList;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport StoryList from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoryList/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}